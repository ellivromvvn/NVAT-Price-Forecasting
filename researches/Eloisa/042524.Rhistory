summarise(
across(
everything(), ~ mean(.[. != 0], na.rm = TRUE)
)
)
#| label: wide-to-long
#| include: false
nvat_monthly_long <- gather(
nvat_monthly,
vegetable,
price,
broccoli:wombok,
factor_key=TRUE
)
#| label: tibble-to-tsibble
#| include: false
nvat_monthly_long <- nvat_monthly_long |>
mutate(date = yearmonth(date)) |>
as_tsibble(key = vegetable, index = date)
#| label: veg_labels
#| include: false
veg_labels <- c('broccoli', 'cabbage', 'carrots', 'cauliflower', 'celery', 'chayote (bunga)', 'cucumber', 'gabi (galyang)', 'pepper (sultan)', 'pepper (taiwan)', 'potato', 'wombok')
#| label: fig-plot_all
#| fig-cap: "Time Series of Monthly Vegetable Prices"
#| echo: false
autoplot(nvat_monthly_long, price) +
theme_minimal() +
labs(y = "Price", x = "Date") +
guides(color = guide_legend(title = "Vegetable")) +
scale_color_discrete(labels = veg_labels)
#| label: tbl-all
#| tbl-cap-location: top
#| tbl-cap: "Summary of Monthly Vegetable Prices"
#| echo: false
set_flextable_defaults(
font.size = 12
)
nvat_monthly_long |>
as.data.frame() |>
group_by(vegetable) |>
summarise(
Min = round(min(price), 2),
Max = round(max(price), 2),
Mean = round(mean(price), 2),
SD = round(sd(price), 2)
) |>
mutate(vegetable = veg_labels) |>
flextable() |>
bold(part = "header") |>
line_spacing(space = .5, part = "body") |>
set_header_labels(vegetable = "Vegetable") |>
set_table_properties(layout = "autofit", width = 1) |>
font(part = "all", fontname = "Times New Roman")
#| label: tbl-all
#| tbl-cap-location: top
#| tbl-cap: "Summary of Monthly Vegetable Prices"
#| echo: false
set_flextable_defaults(
font.size = 12
)
nvat_monthly_long |>
as.data.frame() |>
group_by(vegetable) |>
summarise(
Min = round(min(price), 2),
Max = round(max(price), 2),
Mean = round(mean(price), 2),
SD = round(sd(price), 2)
) |>
mutate(vegetable = veg_labels) |>
flextable() |>
bold(part = "header") |>
line_spacing(space = .5, part = "body") |>
set_header_labels(vegetable = "Vegetable") |>
set_table_properties(layout = "autofit", width = 1) |>
font(part = "all", fontname = "Times New Roman")
#| label: tbl-stl
#| tbl-cap-location: top
#| tbl-cap: "STL Features of Monthly Vegetable Prices"
#| echo: false
nvat_monthly_long |>
index_by(date) |>
features(price, feat_stl) |>
select(
vegetable:seasonal_trough_year
) |>
mutate_at(
vars(seasonal_peak_year, seasonal_trough_year), ~
recode(
.,
'1' = 'October',
'2' = "November",
'3 '= "December",
'4' = "January",
'5' = "February",
'6' = "March",
'7' = "April",
'8' = "May",
'9' = 'June',
'10' = 'July',
'11' = 'August',
'0' = 'September'
)
) |>
mutate(vegetable = veg_labels) |>
rename(
Vegetable = vegetable,
'Trend Strength' = trend_strength,
'Seasonal Strength' = seasonal_strength_year,
'Seasonal Peak' = seasonal_peak_year,
'Seasonal Trough' = seasonal_trough_year
) |>
mutate_if(is.numeric, round, 2) |>
flextable() |>
bold(part = "header") |>
line_spacing(space = .5, part = "body") |>
set_table_properties(layout = "autofit", width = 1) |>
font(part = "all", fontname = "Times New Roman") |>
align(align = "center", part = "header") |>
align(j = -1, align = "center", part = "body")
#| label: tbl-stl
#| tbl-cap-location: top
#| tbl-cap: "STL Features of Monthly Vegetable Prices"
#| echo: false
nvat_monthly_long |>
index_by(date) |>
features(price, feat_stl) |>
select(
vegetable:seasonal_trough_year
) |>
mutate_at(
vars(seasonal_peak_year, seasonal_trough_year), ~
recode(
.,
'1' = 'October',
'2' = "November",
'3 '= "December",
'4' = "January",
'5' = "February",
'6' = "March",
'7' = "April",
'8' = "May",
'9' = 'June',
'10' = 'July',
'11' = 'August',
'0' = 'September'
)
) |>
mutate(vegetable = veg_labels) |>
rename(
Vegetable = vegetable,
'Trend Strength' = trend_strength,
'Seasonal Strength' = seasonal_strength_year,
'Seasonal Peak' = seasonal_peak_year,
'Seasonal Trough' = seasonal_trough_year
) |>
mutate_if(is.numeric, round, 2) |>
flextable() |>
bold(part = "header") |>
line_spacing(space = .5, part = "body") |>
set_table_properties(layout = "autofit", width = 1) |>
font(part = "all", fontname = "Times New Roman") |>
align(align = "center", part = "header") |>
align(j = -1, align = "center", part = "body")
#| include: false
nvat_monthly_long |>
filter(vegetable == "gabi_galyang") |>
gg_subseries(price)
#| label: fig-stl
#| fig-cap: "Seasonal Strength vs Trend Strength of the Monthly Vegetable Prices"
#| echo: false
nvat_monthly_long |>
features(price, feat_stl) |>
ggplot(aes(x = trend_strength, y = seasonal_strength_year,
col = vegetable)) +
geom_point(size = 3) +
labs(
x = "Trend Strength",
y = "Seasonal Strength"
) +
guides(color = guide_legend(title = "Vegetable")) +
theme_minimal() +
scale_color_discrete(labels = veg_labels)
#| include: false
nvat_monthly_long |>
filter(vegetable == "cauliflower" | vegetable == "gabi_galyang") |>
gg_season(price)
#| include: false
nvat_monthly_long |>
filter(vegetable == "pepper_taiwan") |>
model(STL(price)) |>
components() |>
autoplot() +
theme(
strip.text = element_text(size = 8)
)
nvat_monthly_long |>
slice(-n()) |>
stretch_tsibble(.init = 10, .step = 4) |>
model(
ARIMA(price),
ETS(price)
) |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE)
75-13
62/4
nvat_monthly_long |>
slice(-n()) |>
stretch_tsibble(.init = 15, .step = 4) |>
model(
ARIMA(price),
ETS(price)
) |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE)
View(nvat_monthly_long)
slice(1,13,2)
#| label: load-packages
#| include: false
library(tidyverse)
library(clock)
library(fpp3)
library(modelsummary)
library(flextable)
library(officer)
fit <- nvat_monthly_long |>
slice(-n()) |>
stretch_tsibble(.init = 15, .step = 4) |>
model(
ARIMA(price),
ETS(price)
)
nvat_monthly_long |>
slice(-n())
fb_stock
fit
View(fit)
fit <- nvat_monthly_long |>
stretch_tsibble(.init = 15, .step = 4) |>
filter(.id != max(.id)) |>
model(
ARIMA(price),
ETS(price)
)
fit <- nvat_monthly_long |>
stretch_tsibble(.init = 15, .step = 4) |>
filter(.id != max(.id)) |>
model(
ARIMA(price),
ETS(price)
)
View(fit)
fit |>
forecast(h = 4) |>
accuracy(aus_economy) |>
select(.model, RMSE:MAPE)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE)
fit |>
group_by(vegetable)
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE)
fit |>
forecast(h = 4)
fit <- nvat_monthly_long |>
stretch_tsibble(.init = 15, .step = 4) |>
filter(.id != max(.id)) |>
model(
ARIMA = ARIMA(price),
ETS = ETS(price)
)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE) |>
mutate(Vegetable = rep(veg_labels, 2), before = .model)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
group_by(vegetable)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
group_by(Vegetable)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
group_by(Vegetable) |>
arrange()
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE:MAPE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
arrange(Vegetable)
summary(fit)
fit |>
filter(vegetable == 'broccoli') |>
select(ARIMA) |>
report()
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE, MAE, MAPE, MASE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
arrange(Vegetable)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE, MAE, MAPE, MASE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
arrange(Vegetable) |>
round(2)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE, MAE, MAPE, MASE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
arrange(Vegetable) |>
round(is.numeric(),2)
#| label: tbl-stl
#| tbl-cap-location: top
#| tbl-cap: "STL Features of Monthly Vegetable Prices"
#| echo: false
nvat_monthly_long |>
index_by(date) |>
features(price, feat_stl) |>
select(
vegetable:seasonal_trough_year
) |>
mutate_at(
vars(seasonal_peak_year, seasonal_trough_year), ~
recode(
.,
'1' = 'October',
'2' = "November",
'3 '= "December",
'4' = "January",
'5' = "February",
'6' = "March",
'7' = "April",
'8' = "May",
'9' = 'June',
'10' = 'July',
'11' = 'August',
'0' = 'September'
)
) |>
mutate(vegetable = veg_labels) |>
rename(
Vegetable = vegetable,
'Trend Strength' = trend_strength,
'Seasonal Strength' = seasonal_strength_year,
'Seasonal Peak' = seasonal_peak_year,
'Seasonal Trough' = seasonal_trough_year
) |>
mutate_if(is.numeric, round, 2) |>
flextable() |>
bold(part = "header") |>
line_spacing(space = .5, part = "body") |>
set_table_properties(layout = "autofit", width = 1) |>
font(part = "all", fontname = "Times New Roman") |>
align(align = "center", part = "header") |>
align(j = -1, align = "center", part = "body")
#| label: tbl-stl
#| tbl-cap-location: top
#| tbl-cap: "STL Features of Monthly Vegetable Prices"
#| echo: false
nvat_monthly_long |>
index_by(date) |>
features(price, feat_stl) |>
select(
vegetable:seasonal_trough_year
) |>
mutate_at(
vars(seasonal_peak_year, seasonal_trough_year), ~
recode(
.,
'1' = 'October',
'2' = "November",
'3 '= "December",
'4' = "January",
'5' = "February",
'6' = "March",
'7' = "April",
'8' = "May",
'9' = 'June',
'10' = 'July',
'11' = 'August',
'0' = 'September'
)
) |>
mutate(vegetable = veg_labels) |>
rename(
Vegetable = vegetable,
'Trend Strength' = trend_strength,
'Seasonal Strength' = seasonal_strength_year,
'Seasonal Peak' = seasonal_peak_year,
'Seasonal Trough' = seasonal_trough_year
) |>
mutate_if(is.numeric, round, 2) |>
flextable() |>
bold(part = "header") |>
line_spacing(space = .5, part = "body") |>
set_table_properties(layout = "autofit", width = 1) |>
font(part = "all", fontname = "Times New Roman") |>
align(align = "center", part = "header") |>
align(j = -1, align = "center", part = "body")
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE, MAE, MAPE, MASE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
arrange(Vegetable) |>
mutate_if(is.numeric, round, 2)
fit |>
forecast(h = 4) |>
accuracy(nvat_monthly_long) |>
select(.model, RMSE, MAE, MAPE, MASE) |>
mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
arrange(Vegetable) |>
mutate_if(is.numeric, round, 2) |>
rename(Model = .model)
setwd("~/R/NVAT-Price-Forecasting-Fork/researches/Eloisa")
tourism
cycle(nvat$broccoli)
ts_plot_season <- function(x = x) {
season <- cycle(x)
season.factor <- factor(season)
ggplot() +
geom_boxplot(mapping = aes(x = season.factor,
y = x)) +
labs(x = "Periodo", y =  "Serie")
}
ts_plot_season(nvat$broccoli)
library(tidyverse)
ts_plot_season(nvat$broccoli)
ts_plot_season(nvat_monthly$broccoli)
nvat_monthly_long |> filter(vegetable == 'broccoli') |> ts_plot_season()
myts <- ts(nvat$broccoli, start=c(2017, 10), frequency=12)
ts_plot_season(myts)
myts <- ts(nvat_monthly$broccoli, start=c(2017, 10), frequency=12)
ts_plot_season(myts)
broc <- ts_plot_season(myts)
broc
broc$data
View(broc)
broc[["data"]]
cycle(myts)
plot(myts)
rm(myts)
rm(broc)
rm(ts_plot_season())
rm(ts_plot_season)
nvat_monthly$broccoli |> ts(start = c(2017, 10), frequency = 12) |> cycle()
a <- nvat_monthly$broccoli |> ts(start = c(2017, 10), frequency = 12)
b <- nvat_monthly$broccoli |> ts(start = c(2017, 10), frequency = 12) |> cycle()
boxplot(a~b)
ggplot(aes(x=b,y=a)) + geom_boxplot()
df <- data.frame(a,b)
ggplot(df,aes(x=b,y=a)) + geom_boxplot()
nvat_monthly_long
nvat_monthly_long |> filter(vegetable == 'wombok')
library(fpp3)
nvat_monthly_long |> filter(vegetable == 'wombok') |> group_by_key()
nvat_monthly_long |> filter(vegetable == 'wombok') |> index_by(month)
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = date_group(date, "month"))
nvat_monthly_long |> filter(vegetable == 'wombok')
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = date_group(date, "month"))
#| label: load-packages
#| include: false
library(tidyverse)
library(clock)
library(fpp3)
library(modelsummary)
library(flextable)
library(officer)
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = date_group(date, "month"))
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(date = as.POSIXlt(date)) |> mutate(month = date_group(date, "month"))
View(nvat_monthly_long)
class(nvat_monthly_long$date)
month(nvat_monthly_long$date)
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = month(date))
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = month(date)) |> select(month, price) |> ggplot(aes(month, price)) + geom_boxplot()
nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = month(date)) |> select(month, price) |> ggplot(aes(as.factor(month), price)) + geom_boxplot()
a <- nvat_monthly_long |> filter(vegetable == 'wombok') |> mutate(month = month(date)) |> select(month, price) |> ggplot(aes(as.factor(month), price)) + geom_boxplot()
View(a)
View(a)
layer_data(a)
layer_data(a) |> select(ymin)
savehistory("~/R/NVAT-Price-Forecasting-Fork/researches/Eloisa/042524.Rhistory")
