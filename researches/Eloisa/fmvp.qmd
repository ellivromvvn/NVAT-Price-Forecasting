---
title: "Forecasting Monthly Vegetable Prices in the Province of Nueva Vizcaya"
author:
  - Jaime Niel P. Alap   
  - Glomie G. Gonzales
  - Eloisa J. Jimenez
  - Carlo D. Pastores, Jr.
format:
  docx:
    reference-doc: student-research-template.docx
editor: visual
bibliography: references.bib
csl: apa.csl
crossref:
  title-delim: "."
toc: true
execute: 
  cache: true
---

# Chapter I

## INTRODUCTION

### Background of the Study

The fluctuation of vegetable prices is a global concern in both developed and emerging economies. The demand for vegetables as a primary source of essential nutrients and dietary variety has increased concomitantly with urbanization and global population growth. Consequently, the dynamics of vegetable pricing have grown more intricate and significant, having an effect not just on consumer choices but also on food security, economic stability, and agricultural practices. Understanding the factors driving these price fluctuations is paramount for policymakers, farmers, consumers, and the broader food industry [@chen18].

Vegetables are a major life necessity for urban and rural residents, and the vegetable market massively supports rural economic development. Fluctuations in vegetable prices affect farmers' income, quality of life, and decision-making regarding vegetable planting. Therefore, issues regarding maintaining price stability have long been focused on government policies. In recent years, the price of vegetables has exhibited dramatic and frequent volatility, which caused a series of negative effects on stakeholders in the supply-chain, e.g., farmers, logistics, wholesale, retail, and consumers. In view of the above adverse effects on stakeholders, it is of crucial importance to filter out key factors that relate to price fluctuations, targeting effective monitoring of real-time abnormal fluctuations [@chen18].

Price fluctuation is a complex issue with far-reaching consequences, especially for vulnerable populations. While higher prices may appear beneficial for farmers, the inherent volatility poses significant risks, potentially leading to substantial losses for agricultural stakeholders. Often attributed to imbalances in market fundamentals, where demand surpasses supply, this phenomenon has a profound impact on small-scale farmers [@mchopa14].

Prices for vegetables fluctuate frequently, harming the financial interests of farmers, business owners, and consumers. Vegetable market prices are influenced by market supply and demand mechanisms, as well as a variety of internal and external influences. Weather fluctuations are one of these aspects, and they can have varied degrees of impact on the entire process of planting, harvesting, transporting, and selling vegetables. The supply chain for vegetables in China is more vulnerable to weather extremes due to the spatial concentration of vegetable production and the dispersed consumer base, resulting in an imbalance between supply and demand and abnormally large-scale fluctuations in vegetable prices that have an impact on people's livelihoods [@yang22].

According to @fao, agricultural products account for a large proportion of the market as a necessity for daily consumption, and their prices play a critical part in consumer spending and agricultural household income. The supply and demand in a given year determine the prices of agricultural products. While an under supply of agricultural items raises prices and burdens consumers, an oversupply of agricultural products causes vegetable prices to increase and causes financial losses to farming households.

Moreover, vegetable prices have an impact on farmers' income, standard of living, and vegetable producing choices. This is due to the cyclical and seasonal swings that affect vegetable prices; the price trend would alter based on the season, demand, and other factors. Therefore, concerns about price stability have typically focused on government initiatives. Vegetable prices have varied sharply and frequently recently, having a variety of negative effects on supply-chain participants like farmers, transportation, wholesale, retail, and customers [@chen18].

Policy uncertainty may rise as a result of fluctuating commodity prices [@qiao23]. Distributors may find it challenging to plan purchases, inventory control, and pricing strategies due to this unpredictability. Distributors who are unable to anticipate price fluctuations may face financial losses if they buy vegetables at a high price and then the price drops before they can sell them. According to Yiyang et al., smallholder farmers are more vulnerable to risk when prices fluctuate. This is due to the fact that smallholder farmers frequently have little resources and are unable to absorb the potential financial losses caused by changes in prices. These price-induced risks could have an impact on distributors who depend on smallholder farmers for their supplies because they can result in supply disruptions and higher sourcing expenses.

In the Philippines, vegetables price height has been a major problem for past years. Consumers were complaining of higher food prices, reflected not only in vegetables but in poultry and pork meat as well, and selected fish variants. Some prices have gone up by as much as 66 percent from last month alone. The Department of Agriculture officials have blamed the higher prices on numerous factors such as the ongoing pandemic, the devastating typhoons that destroyed crops, and the unwillingness of poultry and hog raisers to farm a new following the glut and the spread of the African swine fever, respectively.

As stated by @vibas19, Agricultural commodities significantly impact a country's export earnings and economic performance. Price fluctuations affect farmers, consumers, and public agencies. The Department of Agriculture in the Philippines recognizes that local market-driven commodity pricing, notably for fruits and vegetables, have prompted government action.

Nueva Vizcaya Agricultural Terminal (NVAT) General Manager Gilbert Cumila said, vegetable prices in the Philippines continue to rise as demand exceeds supply. Wholesale prices of vegetables increases due to the demand of people. This significantly affect the way consumers purchase vegetables to sustain their necessities.

The purpose of the study is to fully comprehend the factors affecting changes in vegetable prices in Nueva Vizcaya. The study intends to offer significant insights and suggestions for farmers, consumers, and distributors by concentrating on forecasting the monthly vegetable prices. These stakeholders should be more prepared to react to monthly changes in vegetable prices when making decisions.

### Statement of the Problem

In response to the challenge of volatile vegetable prices faced by local farmers, distributors, and consumers, the researchers provided forecasts of monthly vegetable prices in Nueva Vizcaya. This effort aimed to assist them in making informed decisions regarding agricultural production, distribution, and vegetable purchases.

To do this, the researchers used five years of available time series data of vegetable prices from the Nueva Vizcaya Agricultural Terminal (NVAT) to come up with models to forecast monthly vegetable prices in Nueva Vizcaya. First, the researchers described the monthly vegetable prices in Nueva Vizcaya. Next, they fitted models to the data using automatic methods. The researchers then determined which automatic method had the best forecast performance for each vegetable and used these methods to forecast monthly vegetable prices in Nueva Vizcaya.

### Objectives of the Study

The researchers forecasted monthly vegetable prices in Nueva Vizcaya by accomplishing the following:

1.  Describe the monthly prices for each vegetable in Nueva Vizcaya from 2017-2023.

2.  Fit models using automatic algorithms to the monthly prices of each vegetable in Nueva Vizcaya from 2017-2023.

3.  Evaluate the performance of these models and determine the best automatic algorithm to forecast monthly vegetable prices in Nueva Vizcaya.

4.  Use the best automatic approach to generate forecasts for monthly vegetable prices in Nueva Vizcaya.

### Significance of the Study

This study is focused on forecasting monthly vegetable prices in Nueva Vizcaya. The results of the study would be beneficial to the following:

**Department of Agriculture.** This research would be beneficial to the Department of Agriculture by incorporating its findings into policy formulation and resource allocation. Accurate price forecasts can inform agricultural development programs, subsidies, and interventions, ultimately supporting the growth and sustainability of the agricultural sector in Nueva Vizcaya.

**Local Farmers.** This research would be beneficial to the local farmers. It would provide them with valuable insights into future vegetable price trends. Accurate price forecasts would enable farmers to plan their planting and harvesting schedules efficiently, reduce wastage, and optimize their crop yields, ultimately leading to improved income stability and sustainable agricultural practices.

**Vendors.** This research would be beneficial to vendors in Nueva Vizcaya's vegetable markets. With reliable vegetable price forecasts, they can make informed purchasing decisions, maintain competitive prices, and increase profit margins. This, in turn, fosters a more stable and profitable business environment for vendors.

**Consumers.** This research would be beneficial to consumers as it helps maintain price stability and affordability. When vendors can make better decisions based on accurate forecasts, consumers are less likely to experience price shocks or sudden increases in vegetable prices, ensuring accessibility to essential food items.

**Future Entrepreneurs.** This research would be beneficial for future entrepreneurs looking to venture into the vegetable market in Nueva Vizcaya. The study's results can be utilized to make informed business decisions, aiding in the development of market entry strategies, inventory management strategies, and pricing strategies. This information is valuable for mitigating the risks associated with launching a new business.

**Business Owners.** This research would be beneficial to business owners in Nueva Vizcaya, whether they are in the agricultural sector or the retail and distribution sector. They can leverage predictive insights to optimize their supply chain operations. Improved supply chain efficiency can lead to cost savings and increased profitability.

**Future Researchers.** This research would serve as a valuable foundation for future researchers interested in agricultural economics, market dynamics, and forecasting methodologies. It would provide a benchmark dataset and insights that can be expanded upon and refined in subsequent research efforts, contributing to the continuous advancement of agricultural forecasting and market analysis.

### Scope and Delimitation of the Study

The study focused on forecasting the monthly vegetable prices at NVAT, Bambang, Nueva Vizcaya. The researchers used time series of vegetable prices for five years available from NVAT. From this data, monthly time series of prices for each vegetable were described. ARIMA, SARIMA, and ETS models were then fitted to the data using automatic algorithms and time series cross-validation to generate optimal models for each vegetable. Comparison of computed point forecast measures for the generated models determined the best automatic method to use in forecasting monthly vegetable prices. A portmanteau test of residuals was used to assess the performance of the models generated by the best automatic method to forecast monthly prices for each vegetable.

The researchers performed log transformations with the data to make sure that forecasts stay positive. Model specifications were not set either, as this process was performed automatically using default settings. All computations and visualizations were performed in the R programming language [@r]. Moreover, external variables impacting vegetable prices were not investigated nor incorporated in the modeling process.

### Conceptual Framework

The research paradigm as shown in @fig-rp guided the researchers in conducting the study. It consists of input, process, and output. The input is the available time series of vegetable prices from NVAT. The outputs are ARIMA, SARIMA, and ETS models generated by the best automatic method for each vegetable, along with their corresponding monthly forecasts. Under process, time series analysis was carried out using automatic algorithms in time series cross-validation to generate different optimal ARIMA, SARIMA, and ETS models for each vegetable. From this, the best automatic method for each vegetable was determined by comparing the point forecast accuracy measures of the models generated. Also, portmanteau test of residuals was performed to describe the performance of the final model for each vegetable.

![Research Paradigm](pictures/rp.png){#fig-rp fig-align="center" width="600"}

<br>

### Definition of Terms

**AutoRegressive Integrated Moving Average (ARIMA).** Utilize ARIMA to model and predict monthly vegetable prices by considering autoregressive and moving average components while addressing seasonality or trends through differencing, ensuring a more accurate representation of the variations over time.

**Exponential Smoothing (ETS).** Apply ETS as an alternative forecasting method to capture systematic trends or seasonal patterns in monthly vegetable prices, providing a robust approach beyond traditional ARIMA models for more comprehensive predictions.

**Forecasting.** Apply ETS as an alternative forecasting method to capture systematic trends or seasonal patterns in monthly vegetable prices, providing a robust approach beyond traditional ARIMA models for more comprehensive predictions.

**The Nueva Vizcaya Agricultural Terminal (NVAT).** Place to gather data of monthly vegetable prices.

**Root Mean Squared Error (RMSE).** Evaluate the accuracy of your forecasting models by calculating RMSE, which measures the average deviation between predicted and actual monthly vegetable prices. Lower RMSE values indicate better predictive performance, ensuring the reliability of your forecasting approach.

**Seasonal AutoRegressive Integrated Moving Average (SARIMA).** Enhance forecasting accuracy by incorporating SARIMA, an extension of ARIMA, to account for seasonal components in monthly vegetable prices. This is particularly beneficial when dealing with recurring seasonal patterns in the market.

**Time Series.** Analyze historical time series data of monthly vegetable prices to identify trends, patterns, and behavior over time. This helps in building models that can capture and predict future price movements accurately.

**Vegetable Price.** Study and forecast monthly vegetable prices are a key economic and agricultural indicator. Understand the supply and demand dynamics and use forecasting models to predict how these prices might evolve in the future, aiding in decision-making for farmers, traders, and policymakers.

# Chapter II

## REVIEW OF RELATED LITERATURE

### Vegetable Prices

Vegetables have the greatest supply and price volatility of any agricultural item. Vegetables are difficult to keep in a consistent supply and price because they are grown outside and their yields vary greatly depending on the weather. As a result, vegetables have a substantial economic impact. Despite the government's best efforts, recurring weather shifts have generated instability in vegetable supply and price swings in recent years [@illankoon2020].

Prices for vegetables fluctuate frequently, harming the financial interests of farmers, business owners, and consumers. Vegetable market prices are influenced by market supply and demand mechanisms, as well as a variety of internal and external influences. Weather fluctuations are one of these aspects, and they can have varied degrees of impact on the entire process of planting, harvesting, transporting, and selling vegetables. The supply chain for vegetables in China is more vulnerable to weather extremes due to the spatial concentration of vegetable production and the dispersed consumer base, resulting in an imbalance between supply and demand and abnormally large-scale fluctuations in vegetable prices that have an impact on people's livelihoods [@yang22].

Moreover, vegetable prices have an impact on farmers' income, standard of living, and vegetable producing choices. This is due to the cyclical and seasonal swings that affect vegetable prices; the price trend will alter based on the season, demand, and other factors. Therefore, concerns about price stability have typically focused on government initiatives. Vegetable prices have varied sharply and frequently recently, having a variety of negative effects on supply-chain participants like farmers, transportation, wholesale, retail, and customers [@chen18].

The quality of life of residents will be directly impacted by frequent increases in vegetable market prices, which will also bury hidden dangers for the fall in vegetable prices in the subsequent round of prices. In contrast, the continued decline in vegetable market prices results in prices that are too low and negatively impact the vital interests and production enthusiasm of vegetable farmers, leaving the supply of vegetables poorly protected and causing the subsequent round of skyrocketing prices. Regional vegetable price fluctuations have a significant negative impact on farmers and consumers, which has an impact on the macroeconomic stability and significantly lowers the degree of regional social welfare [@gan20].

Vegetables are highly perishable products [@desalegn21]. This implies that a variety of factors, including supply and demand, weather, and storage availability, might have a significant impact on their pricing. Distributors may become uneasy as a result of these developments, which will make it challenging for them to project earnings and run their businesses efficiently. According to the study, the vegetable value chain commonly involves middlemen. When veggies are plentiful, these intermediaries usually take advantage of price volatility by buying them at a discount from growers and reselling them to clients at a premium when they are in short supply. Having to outbid middlemen for supplies may result in lower profit margins for distributors. As mentioned in the introduction of the study of Desalegn, smallholder farmers in rural areas usually lack access to functioning market information. They consequently struggle to anticipate price changes and effectively haggle for their produce. Distributors who depend on these farmers for their goods are indirectly impacted by this ignorance. It was also emphasized in the study of Desalegn that the perishable nature of vegetables is another issue. Distributors could therefore suffer since, when the market gets saturated, they won't be able to keep excess inventory on hand and would have to sell produce at a loss.

In the Philippines, sustainable soil nutrient-enhancing strategies involve the wise use and management of inorganic and organic nutrient sources in ecologically sound production systems [@janssen93]. The primary goal of integrated nutrient management (INM) is to combine old and new methods of nutrient management into ecologically sound and economically viable farming systems that utilize available organic and inorganic sources of nutrients in a judicious and efficient way. Integrated nutrient management optimizes all aspects of nutrient cycling. It attempts to achieve tight nutrient cycling with synchrony between nutrient demand by the crop and nutrient release in the soil, while minimizing losses through leaching, runoff, volatilization and immobilization. Providing higher economic returns per unit area and developing new export markets for high value crops in the Philippines has been identified as a priority by the Philippine Government and the Australian Centre for International Agricultural Research (ACIAR) as means of increasing economic growth and improving the standard of living of people living in rural areas. Regions VIII (Leyte), X (Northern Mindanao/Cagayan de Oro) and XI (Southern Mindanao/ Davao) have significant potential for expanding vegetable production. Moreover, they are seen as strategically important to the Australian Government, whereby efforts to improve the livelihoods of the populations in these areas could contribute to improving geo-political stability in the region [@tulin19].

Benguet, a mountainous province in the northern Philippines, trucks down at least 1,500 metric tons of semi-temperate vegetables every day to depots called bagsakan in Manila, the nation's capital. When demand spikes around holidays like Christmas and Easter, the volume of deliveries can triple. Eighty percent of the nation's need for semi-temperate vegetables like potatoes, cabbage, radish, chayote, carrot, lettuce, and broccoli is met by crops that are shipped from Manila throughout the archipelago. Situated atop the Cordillera mountain range, the high altitude of Benguet province is conducive to the production of these kinds of crops, which are also known as highland vegetables. With a minimum 1.1 million metric tons produced annually. However, as farmers use chemical-heavy fertilizers to boost yields, fifty years of toiling the land to feed millions across the country is causing the forest cover to slowly disappear and the soil to deteriorate. In addition to causing fluctuating vegetable prices and oversupply --- which frequently results in spoilage and losses for farmers --- the region's growing number of farmers and farmland, all of which are planting upland vegetables.

Pricing Theory and Law of Supply and Demand is used to interpret the gathered statistical data from previous studies in this systematic review of economics literature in the Philippines. It provides explanation on the responsiveness of seaweed farmers in the Philippines to the price changes in relation to the supply and demand that is changing from time to time. The strong demand of seaweed drives the market prices, and this may drive seaweed farmers to increase the seaweed production but when the price are low seaweed farmers have the tendency to leave their farms resulting in a low production of seaweed and in effect a decrease in seaweed supply. This problem may be enlightened using the law of supply and demand wherein when the demand is high --- the price is high, and the supply is low. On the other hand, if the demand is low --- the price is low, and the supply is high. As a result, the seaweed farmers are not responsive to price changes in the short-run and in the long-run [@guerrero22].

### Forecasting Vegetable Prices

Accurate agricultural price forecasting is critical to achieving sustainable and healthy agricultural development, and it is a hot research area in the agricultural industry. It explores traditional forecasting procedures, intelligent forecasting methods, and combination model forecasting methods, as well as the obstacles found in the current research landscape of agricultural commodity price prediction [@sun23].

Farming is first and foremost defined by family work, which is limited by the availability of land, water, and capital resources. Choosing which agricultural items to produce must be made by farmers, however there are oftentimes not enough possibilities to enable the best farming decisions. Farmers must choose which vegetables will bring in the highest prices at harvest. The aforementioned issue was fixed by estimating pricing based on weather conditions using machine learning technologies. The hopeful results of the Prediction model are what have made Machine Learning so well-liked. This paper explores the use of multiple regression models to forecast vegetable prices, and its applicability has also been taken into account. In order to plan for their forthcoming crop and prevent hyperinflation, farmers benefit from being able to estimate vegetable prices [@kakulapati22].

Forecasting vegetable prices is critical in the agricultural industry for making sound judgments. This forecasting task is quite difficult. Because neural networks are self-adaptive, have a high learning capacity, and are adaptable, they are used to tackle a wide range of difficult tasks. This model forecasts the price of vegetables for the next day based on the previous price of time series data. This research compares and contrasts three machine learning algorithms: radial basis function, back propagation neural network, and genetically based neural network. The models are assessed, and the accuracy percentages show that the genetically based neural network outperforms propagation neural networks and radial basis functions in terms of vegetable price prediction accuracy [@subhasree16].

The vegetable industry is crucial, particularly in terms of supplying an abundance of fresh agricultural products. For the agriculture sector to make wise decisions, vegetable price forecasting is essential. The challenges that Malaysian farmers face is not just related to aging, but also to their ability to compete in a country where consumers prioritize fresh produce and fruits from hypermarkets and wholesale markets over supermarkets. This review article aids in identifying the present issues facing Malaysia's agriculture industry and examines the connection between agriculture and e-commerce. The growth of e-agriculture has been noted by researchers recently, and the authors discovered that an agricultural e-commerce platform equipped with a price forecasting model could be useful in resolving a current national issue. This study examines the global agricultural e-commerce platforms currently in use and makes an attempt to compare it with the domestic market. Following the completion of the reviews, the authors propose building a time analysis model in a hybrid approach for vegetable price forecasting in an agricultural e-commerce platform. This model can be utilized by the government to inform policy decisions [@nath2023].

In the Philippines, box-Jenkins technique and the Autoregressive Moving Average (ARMA) model were used to forecast onion production. Using historical data from the Philippine Statistics Authority, the ARMA (4,2) model was applied to construct an optimal forecasting solution. The model passed diagnostic tests with a mean absolute percentage error (MAPE) of 10.406%. The predicted yields for each quarter were highlighted, as were projections for onion output in 2023 and 2024. An examination of historical data indicated that weather trends, consumer demand, agricultural techniques, and imports and exports all contribute to periodic variations in onion supply. The study's findings highlight the significance of employing exact forecasting models when deciding how to distribute resources, establish pricing, and place products on the market [@capiral23].

Commodity prices have an impact on both producers and consumers; therefore, estimating their future value is important for making decisions down the road. The purpose of this study is to assist policymakers in developing guidelines that will benefit producers and consumers of agricultural products such as sitao, whole chicken, eggplant, tomato, pork ham, and pork liempo. The chosen commodities' data behavior for the years 2013--2022 was examined by the researchers, and they all showed an upward trend with some fluctuations. Numerous factors, including seasonality of production, volume surplus, pest and disease, typhoon destruction, and importation, are found to be linked to these fluctuations. The researcher used the ARIMA technique to forecast the price of this agricultural produce after analyzing the price behavior [@zhang20].

Crop climate calendars enhance traditional crop calendars by providing phenological states, cultivation techniques, and weather and climatic requirements that all crops must meet during a cropping season, as well as planting and harvest timings. The case for capturing this data in Benguet is compelling: the mountainous province benefits from the growth of high-value crops like carrots, cabbage, and potatoes despite weather phenomena such as hail, frost, and various microclimates. The researchers conducted focus groups with municipal agriculturalists and farmer leaders in Atok, Benguet, to better understand their experiences and build their crop climate calendar. The calendars developed during this experiment could provide a solid foundation for investigating the area's climate-sensitive agricultural methods [@domingo20].

### Synthesis

Vegetable prices are influenced by various factors, both internationally and within specific countries like the Philippines. Internationally, studies have shown that vegetables have a high supply and price volatility due to their dependence on weather conditions. Weather fluctuations can lead to inconsistent vegetable supply and large-scale price fluctuations, impacting farmers, business owners, and consumers [@illankoon2020; @yang22]. This instability in prices affects farmers' income, standard of living, and their choices in vegetable production [@chen18].

In the Philippines, the pricing of vegetables is also influenced by factors such as market supply and demand, weather conditions, and storage availability. Distributors and middlemen play a role in price volatility, taking advantage of fluctuations to buy vegetables at a discount and resell them at a higher price when supply is low [@desalegn21]. Smallholder farmers in rural areas often lack access to market information, making it difficult for them to anticipate price changes and negotiate effectively, indirectly impacting distributors who rely on their produce. Additionally, the perishable nature of vegetables poses a challenge for distributors who may suffer losses when market saturation occurs and excess inventory cannot be stored.

Accurate forecasting of vegetable prices is crucial for sustainable agricultural development. Machine learning technologies and regression models have been used to forecast vegetable prices based on factors such as weather conditions, previous price data, and market trends [@kakulapati22; @subhasree16]. In the Philippines, forecasting models have been applied to predict the production and prices of specific vegetables like onions, using historical data and considering factors such as weather trends, consumer demand, and agricultural techniques [@capiral23].

In conclusion, vegetable prices are influenced by various factors internationally and within specific countries like the Philippines. Factors such as weather fluctuations, market supply and demand, and the role of distributors and middlemen contribute to price volatility. Accurate forecasting of vegetable prices using machine learning and regression models can help farmers and policymakers make informed decisions. Understanding and addressing these factors are crucial for achieving sustainable agricultural development and improving the livelihoods of farmers and consumers.

# Chapter III

## RESEARCH METHODOLOGY

### Research Design

The research is purely quantitative in nature. Specifically, the researchers employed comparative time series forecasting [@hyndman21]. In this study, automatic algorithms for AutoRegressive Integrated Moving Average (ARIMA) and Exponential Smoothing (ETS) models were compared to determine the best algorithm to forecast monthly vegetable prices.

### Locale of the Study

The study was conducted in Bambang, Nueva Vizcaya. Specifically, the data for this study was collected from the Nueva Vizcaya Agricultural Terminal (NVAT), which is located in Bambang. Bambang is the next town south of Bayombong --- the capital town of the province. Please see @fig-bambang below.

![Map of Bambang, Nueva Vizcaya (https://en.wikipedia.org/wiki/Bambang,\_Nueva_Vizcaya#/media/File:Ph_locator_nueva_vizcaya_bambang.png)](pictures/bambang.png){#fig-bambang fig-align="center"}

<br>

### Source and Subject of the Study

The primary source of data for the research is the NVAT. Six years and two months of available time series of vegetable prices in Philippine peso (Php) from the NVAT were used to come up with forecasts for monthly vegetable prices in Nueva Vizcaya.

### Data Gathering Procedure

The researchers inquired about the background and data policy of NVAT by visiting its office. Additionally, letters requesting permission to gather data for the research were written to the NVSU President, NVAT General Manager, and the Municipal Mayor of Bambang (refer to Appendix A, B, and C, respectively).  Throughout the data collection process, strict adherence to ethical considerations, including data confidentiality and approval from appropriate authorities, were maintained. Subsequently, the researchers were able to collect time series of vegetable prices for six years and 2 months from the NVAT facebook page.

### Data Analysis and Treatment of Data

In forecasting monthly vegetable prices in Nueva Vizcaya, the researchers followed the process illustrated in @fig-workflow. It is an adapted representation of the workflow introduced by @hyndman21.

```{r}
#| label: diagram-workflow
#| echo: false
#| fig-width: 6

workflow <- DiagrammeR::grViz("digraph {

graph [layout = dot, rankdir = LR]

# define the global styles of the nodes. We can override these in box if we wish
node [shape = rectangle, style = filled, fillcolor = Linen]

B [label = 'Tidy']
C [label = 'Visualize']
D [label = 'Estimate']
E [label = 'Evaluate']
F [label = 'Forecast']

# edge definitions with the node IDs
B -> C -> D -> E -> F;
}")

vtree::grVizToPNG(workflow, filename = "pictures/workflow.png", width = 600)
```

![Data Treatment and Analysis Workflow](pictures/workflow.png){#fig-workflow fig-align="center" width="600"}

<br>

The tidy part involves preparing the raw data in the correct format. This includes loading the raw data into R and identifying and resolving missing values to create a tidy time series data for monthly vegetable prices. The researchers utilized the `tsibble` and `tidyverse` packages for this task [@wickham19; @wang20]. 

Subsequently, the researchers visualized the monthly vegetable prices in Nueva Vizcaya. The trend and seasonal components of the data were also visualized using the seasonal and trend decomposition using LOESS (STL) method developed by @cleveland90. These visualizations were integral to the workflow.

Next, automatic algorithms introduced by @hyndman21 were used to estimate or fit optimal ARIMA and ETS models to the data. The researchers implemented these algorithms in R using the `fable` package [@fable]. A log transformation was also used to keep the forecast positive.

Moreover, time series cross-validation was used to evaluate the forecast accuracy of the automatic ARIMA algorithm and the automatic ETS algorithm [@hyndman21]. Point forecast accuracy measures such as the mean absolute error (MAE), root mean squared error (RMSE), mean absolute percentage error (MAPE), and mean absolute squared error (MASE) were computed from the generated models and then compared to determine the best algorithm to be used in forecasting monthly vegetable prices. The algorithm with lower point forecast accuracy measures was selected as the best algorithm for each vegetable.

Then, the best algorithm for each vegetable was used to generate models to forecast monthly vegetable prices in Nueva Vizcaya. 

Finally, a portmanteau test in the form of the Ljung-Box test was computed for the models used to forecast monthly vegetable prices. This allowed the researchers to describe the performance of these models in forecasting. Computed p-values greater than .05 confirm that the residuals are similar to white noise. Otherwise, the residuals still have some remaining autocorrelation that is not accounted for in the model [@hyndman21].

To document the analysis and writing of the research project, the researchers created a private github repository.

# CHAPTER IV

## RESULTS AND DISCUSSION

### Monthly Vegetable Prices

```{r}
#| label: load-packages
#| include: false

library(tidyverse)
library(clock)
library(fpp3)
library(flextable)
library(gghighlight)
library(MOTE)
```

```{r}
#| label: load-data
#| include: false

nvat <- read.csv("data/nvat.csv")
```

```{r}
#| label: daily-to-monthly
#| include: false

nvat <- nvat |>
  mutate(date = dmy(date))

nvat_monthly <- nvat |>
  mutate(date = date_group(date, "month")) |>
  group_by(date) |>
  summarise(
    across(
      everything(), ~ mean(.[. != 0], na.rm = TRUE)
    )
  ) |>
  ungroup()

nvat_monthly <- nvat_monthly |>
  mutate(month = format(date, '%B %Y'))
```

```{r}
#| label: wide-to-long
#| include: false

nvat_monthly_long <- gather(
  nvat_monthly,
  vegetable,
  price,
  broccoli:wombok,
  factor_key=TRUE
)
```

```{r}
#| label: tibble-to-tsibble
#| include: false

nvat_monthly_long_ts <- nvat_monthly_long |>
  mutate(date = yearmonth(date)) |>
  as_tsibble(key = vegetable, index = date)
```

```{r}
#| label: veg_labels
#| include: false

veg_labels <- c('broccoli', 'cabbage', 'carrot', 'cauliflower', 'celery', 'chayote (bunga)', 'cucumber', 'gabi (galyang)', 'pepper (sultan)', 'pepper (taiwan)', 'potato', 'wombok')

veg_labels1 <- c(
  "chayote_bunga" = "chayote (bunga)",
  "gabi_galyang" = "gabi (galyang)",
  "pepper_sultan" = "pepper (sultan)",
  "pepper_taiwan" = "pepper (taiwan)"
)
```

After encoding the available vegetable prices from the NVAT Facebook page, only 12 vegetables were chosen for the study. These vegetables are broccoli, cabbage, carrots, cauliflower, celery, chayote (bunga) cucumber, gabi, pepper (sultan), pepper (taiwan), potato, and wombok. The graph of the time series of the monthly prices of these vegetables are shown in @fig-plot_all. The time series of the monthly vegetable prices are from October 2017 to December 2023; that is 6 years and 3 months of data. Thus, each vegetable time series consists of 75 observations.

```{r}
#| label: fig-plot_all
#| fig-cap: "Time Series for Monthly Vegetable Prices"
#| fig-width: 6.5
#| echo: false

nvat_monthly_long |>
  ggplot(aes(x = date, y = price, colour = vegetable)) +
  geom_line(
    color="darkgreen",
    linewidth = .75
  ) +
  gghighlight(
    use_direct_label = F,
    unhighlighted_params = list(linewidth = .5, alpha = .75)
  ) +
  theme_minimal() +
  theme(
    legend.position="none",
    axis.text.x = element_text(angle = 45, hjust = .75)
  ) +
  labs(y = "Price", x = "Year") +
  facet_wrap(
    ~vegetable,
    labeller = labeller(vegetable = veg_labels1),
    ncol = 3
  )
```

<br>

The summary of the time series of monthly vegetable prices from October 2017 to December 2023 is shown in @tbl-all.

```{r}
#| label: tbl-all
#| tbl-cap-location: top
#| tbl-cap: "Summary of the Time Series for Monthly Vegetable Prices"
#| echo: false

tbl_all <- nvat_monthly_long |>
  as.data.frame() |>
  group_by(vegetable) |>
  summarise(
    Min = round(min(price), 2),
    Max = round(max(price), 2),
    Mean = round(mean(price), 2),
    SD = round(sd(price), 2)
  ) |>
  mutate(vegetable = veg_labels) |>
  rename(Vegetable = vegetable)

flextable(tbl_all) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  set_table_properties(layout = "autofit", width = 1)
```

<br>

For the broccoli time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'broccoli']` in April 2018 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'broccoli']` in September 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'broccoli']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'broccoli']`.

For the cabbage time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'cabbage']` in February 2020 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'cabbage']` in August 2021. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'cabbage']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'cabbage']`.

For the carrot time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'carrot']` in May 2020 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'carrot']` in July 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'carrot']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'carrot']`.

For the cauliflower time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'cauliflower']` in March 2020 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'cauliflower']` in August 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'cauliflower']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'cauliflower']`.

For the celery time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'celery']` in February 2018 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'celery']` in September 2018. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'celery']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'celery']`.

For the chayote (bunga) time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'chayote (bunga)']` in January 2020 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'chayote (bunga)']` in September 2018. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'chayote (bunga)']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'chayote (bunga)']`.

For the cucumber time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'cucumber']` in July 2020 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'cucumber']` in January 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'cucumber']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'cucumber']`.

For the gabi (galyang) time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'gabi (galyang)']` in January 2018 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'gabi (galyang)']` in December 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'gabi (galyang)']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'gabi (galyang)']`.

For the pepper (sultan) time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'pepper (sultan)']` in May 2020 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'pepper (sultan)']` in September 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'pepper (sultan)']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'pepper (sultan)']`.

For the pepper (taiwan) time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'pepper (taiwan)']` in June 2019 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'pepper (taiwan)']` in December 2020. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'pepper (taiwan)']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'pepper (taiwan)']`.

For the potato time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'potato']` in June 2021 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'potato']` in October 2023. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'potato']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'potato']`.

For the wombok time series, the minimum price is `r tbl_all$Min[tbl_all$Vegetable == 'wombok']` in December 2018 and the maximum price is `r tbl_all$Max[tbl_all$Vegetable == 'wombok']` in December 2020. The average price is `r tbl_all$Mean[tbl_all$Vegetable == 'wombok']`. It has a standard deviation of `r tbl_all$SD[tbl_all$Vegetable == 'wombok']`.

The vegetable with the most variability in price is pepper (taiwan). It also has the highest maximum price and the highest average price among all the vegetables. On the other hand, the vegetable that has the least variability is chayote (bunga). It also has the lowest average price. The vegetable that has the lowest minimum price is wombok.

@tbl-stl shows the STL features of the time series of monthly vegetable prices.

```{r}
#| label: tbl-stl
#| tbl-cap-location: top
#| tbl-cap: "STL Features of the Time Series for Monthly Vegetable Prices"
#| echo: false

tbl_stl <- nvat_monthly_long_ts |>
  index_by(date) |>
  features(price, feat_stl) |>
  select(
    vegetable:seasonal_trough_year
  ) |>
  mutate_at(
    vars(seasonal_peak_year, seasonal_trough_year), ~
      recode(
        ., 
        '1' = 'October',
        '2' = "November",
        '3 '= "December",
        '4' = "January",
        '5' = "February",
        '6' = "March",
        '7' = "April",
        '8' = "May",
        '9' = 'June',
        '10' = 'July',
        '11' = 'August',
        '0' = 'September'
      )
  ) |>
  mutate(vegetable = veg_labels) |>
  rename(
    Vegetable = vegetable,
    'Trend Strength' = trend_strength,
    'Seasonal Strength' = seasonal_strength_year,
    'Seasonal Peak' = seasonal_peak_year,
    'Seasonal Trough' = seasonal_trough_year
  ) |>
  mutate_if(is.numeric, round, 2)

flextable(tbl_stl) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  font(part = "all", fontname = "Times New Roman") |>
  align(j = -1, align = "center", part = "all") |>
  fontsize(size = 12, part = "all") |>
  padding(j = 1, padding.right = 0) |>
  set_header_labels(
    'Trend Strength' = 'Trend\nStrenth',
    'Seasonal Strength' = 'Seasonal\nStrength',
    'Seasonal Peak' = 'Seasonal\nPeak',
    'Seasonal Trough' = 'Seasonal\nTrough'
  ) |>
  set_table_properties(width = 1, layout = "autofit")
```

<br>

The broccoli time series has a trend strength of `r tbl_stl[1, 2]`, showing that `r tbl_stl[1, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, the time series has a seasonal strength of `r tbl_stl[1, 3]`, showing that `r tbl_stl[1, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[1, 4]` and trough in `r tbl_stl[1, 5]`.

The cabbage time series has a trend strength of `r tbl_stl[2, 2]`, showing that `r tbl_stl[2, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[2, 3]`, showing that `r tbl_stl[2, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[2, 4]` and trough in `r tbl_stl[2, 5]`.

The carrot time series has a trend strength of `r tbl_stl[3, 2]`, showing that `r tbl_stl[3, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[3, 3]`, showing that `r tbl_stl[3, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[3, 4]` and trough in `r tbl_stl[3, 5]`.

The cauliflower time series has a trend strength of `r tbl_stl[4, 2]`, showing that `r tbl_stl[4, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[4, 3]`, showing that `r tbl_stl[4, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[4, 4]` and trough in `r tbl_stl[4, 5]`.

The celery time series has a trend strength of `r tbl_stl[5, 2]`, showing that `r tbl_stl[5, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[5, 3]`, showing that `r tbl_stl[5, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[5, 4]` and trough in `r tbl_stl[5, 5]`.

The chayote (bunga) time series has a trend strength of `r tbl_stl[6, 2]`, showing that `r tbl_stl[6, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[6, 3]`, showing that `r tbl_stl[6, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[6, 4]` and trough in `r tbl_stl[6, 5]`.

The cucumber time series has a trend strength of `r tbl_stl[7, 2]`, showing that `r tbl_stl[7, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[7, 3]`, showing that `r tbl_stl[7, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[7, 4]` and trough in `r tbl_stl[7, 5]`.

The gabi (galyang) time series has a trend strength of `r tbl_stl[8, 2]`, showing that `r tbl_stl[8, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[8, 3]`, showing that `r tbl_stl[8, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[8, 4]` and trough in `r tbl_stl[8, 5]`.

The pepper (sultan) time series has a trend strength of `r tbl_stl[9, 2]`, showing that `r tbl_stl[9, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[9, 3]`, showing that `r tbl_stl[9, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[9, 4]` and trough in `r tbl_stl[9, 5]`.

The pepper (taiwan) time series has a trend strength of `r tbl_stl[10, 2]`, showing that `r tbl_stl[10, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[10, 3]`, showing that `r tbl_stl[10, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak is in `r tbl_stl[10, 4]` and trough in `r tbl_stl[10, 5]`.

The potato time series has a trend strength of `r tbl_stl[11, 2]`, showing that `r tbl_stl[11, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[11, 3]`, showing that `r tbl_stl[11, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak is in `r tbl_stl[11, 4]` and trough in `r tbl_stl[11, 5]`.

The wombok time series has a trend strength of `r tbl_stl[12, 2]`, showing that `r tbl_stl[12, 2]*100`% of the time series is accounted for by trend not considering seasonality. On the other hand, it has a seasonal strength of `r tbl_stl[12, 3]`, showing that `r tbl_stl[12, 3]*100`% of the time series is accounted for by seasonality not considering trend. Prices peak in `r tbl_stl[12, 4]` and trough in `r tbl_stl[12, 5]`.

The vegetable with the strongest trend is gabi (galyang). Meanwhile, the vegetable that has the weakest trend is wombok. The vegetable with the strongest seasonality is cauliflower. Meanwhile, the vegetable with the weakest seasonality is cabbage. Most often the prices peak in the third quarter, while some peak in the fourth. All of the prices trough in the first quarter. Please see Appendix D for the seasonal and trend decomposition using LOESS (STL).

Trend strength and seasonal strength of vegetable prices are influenced by supply and production levels, seasonal demand patterns, market conditions and consumer preferences, economic factors, environmental conditions, and logistic and transportation costs [@liu2015; @illankoon2020a; @zhang2024].

These trends and seasonality allow farmers to plan accordingly in production and marketing, while consumers are better placed in making decisions on when to buy vegetables for the best prices and availability.

For farmers, understanding these seasonal dynamics is crucial for optimizing production and marketing strategies. By aligning planting schedules with peak demand periods, they can maximize profits and reduce the risk of oversupply, which often leads to lower prices. Conversely, during low-demand months, farmers can plan for reduced production or explore alternative crops to mitigate financial losses.

Consumers also benefit from this knowledge by timing their business processes with purchases during the trough period, when prices are generally lower. This strategic buying behavior not only helps consumers save money and encourages a more efficient market where supply and demand are better balanced.

```{r}
#| include: false

nvat_monthly_long_ts |>
  filter(vegetable == "broccoli") |>
  gg_subseries(price)
```

```{r}
#| label: fig-stl
#| fig-cap: "Seasonal Strength vs Trend Strength of the Monthly Vegetable Prices"
#| include: false

nvat_monthly_long_ts |>
  features(price, feat_stl) |>
  ggplot(aes(x = trend_strength, y = seasonal_strength_year,
             col = vegetable)) +
  geom_point(size = 3) +
  labs(
    x = "Trend Strength",
    y = "Seasonal Strength"
  ) +
  guides(color = guide_legend(title = "Vegetable")) +
  theme_minimal() +
  scale_color_discrete(labels = veg_labels)
```

```{r}
#| include: false

nvat_monthly_long_ts |>
  filter(vegetable == "cauliflower" | vegetable == "gabi_galyang") |>
  gg_season(price)
```

```{r}
#| include: false

nvat_monthly_long_ts |>
  filter(vegetable == "wombok") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 8)
    )
```

### Models for Monthly Vegetable Prices

The time series cross-validation using automatic ARIMA method and automatic ETS method produced 360 models: 180 ARIMA and SARIMA models and 180 ETS models. There are 15 ARIMA and/or SARIMA models and 15 ETS models for each vegetable. Please see Appendix E for the full list of these models per vegetable.

```{r}
#| include: false

fit <- nvat_monthly_long_ts |>
  stretch_tsibble(.init = 15, .step = 4) |>
  filter(.id != max(.id)) |>
  model(
    ARIMA = ARIMA(log(price)),
    ETS = ETS(log(price))
  )
```

### Model Evaluation and Selection

@tbl-fit shows the performances of the automatic ARIMA method and ETS method for each vegetable.

```{r}
#| label: tbl-fit
#| tbl-cap-location: top
#| tbl-cap: "Performances of the Automatic Methods for Each Vegetable"
#| echo: false

tbl_fit <- fit |>
  forecast(h = 4) |>
  accuracy(nvat_monthly_long_ts) |>
  select(.model, RMSE, MAE, MAPE, MASE) |>
  mutate(Vegetable = rep(veg_labels, 2), .before = .model) |>
  arrange(Vegetable) |>
  mutate_if(is.numeric, round, 2) |>
  rename("Automatic Method" = .model)

flextable(tbl_fit) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 2, align = "center", part = "all") |>
  padding(j = 1, padding.right = 0, part = "all") |>
  padding(j = 2, padding.right = 0, padding.left = 0, part = "all") |>
  padding(j = 3, padding.right = 0, padding.left = 0, part = "all") |>
  padding(j = 4, padding.right = 0, padding.left = 0, part = "all") |>
  padding(j = 5, padding.right = 0, padding.left = 0, part = "all") |>
  padding(j = 6, padding.left = 0, part = "all") |>
  set_header_labels(
    'Automatic Method' = 'Automatic\nMethod'
  ) |>
  width(j = 1, width = 1.5) |>
  width(j = 2, width = 1) |>
  width(j = 3, width = 1) |>
  width(j = 4, width = 1) |>
  width(j = 5, width = 1) |>
  width(j = 6, width = .85) |>
  set_table_properties(width = 1, layout = "autofit")
```

<br>

The automatic ARIMA method proved to be better than the automatic ETS  method in all the vegetables based on the time series cross-validation performance measures, except for gabi (galyang). The automatic ARIMA method showed higher accuracy on all performance measures for all vegetables except for gabi (galyang). The automatic ETS method only showed higher accuracy on all performance measures for gabi (galyang). Thus, the automatic ARIMA method was used to generate models to forecasts for all the vegetables except for gabi (galyang), for which automatic ETS method was used.

It is noted in @tbl-all that gabi (galyang) has a mean price of 23.07 and a standard deviation of 8.83. In @fig-plot_all, it is notable that the graph of gabi (galyang) is a smooth line compared to other vegetables which are crooked. This shows that its seasonality is not annual unlike the others and it is following an unusual cycle [@hyndman23]. In @tbl-stl, it has the highest trend strength. Its seasonal strength, is third from the highest, that is 55%. These features and other factors not considered might have influenced the performance of the automatic ARIMA algorithm favoring the automatic ETS algorithm.

### Forecasts for Monthly Vegetable Prices.

```{r}
#| include: false

broccoli <- nvat_monthly_long_ts |>
  filter(vegetable == "broccoli")
  
fit_broccoli <- broccoli |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_broccoli <- fit_broccoli |>
  forecast(h = 4)
```

@tbl-broccoli shows the forecasts for broccoli prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from a SARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-broccoli
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Broccoli Prices"
#| echo: false

tbl_broccoli <- fc_broccoli |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_broccoli) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for broccoli price is `r tbl_broccoli[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_broccoli[1, 3]` to `r tbl_broccoli[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_broccoli[1, 5]` to `r tbl_broccoli[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for broccoli price is `r tbl_broccoli[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_broccoli[2, 3]` to `r tbl_broccoli[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_broccoli[2, 5]` to `r tbl_broccoli[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for broccoli price is `r tbl_broccoli[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_broccoli[3, 3]` to `r tbl_broccoli[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_broccoli[3, 5]` to `r tbl_broccoli[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for broccoli price is `r tbl_broccoli[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_broccoli[4, 3]` to `r tbl_broccoli[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_broccoli[4, 5]` to `r tbl_broccoli[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_broccoli <- augment(fit_broccoli) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 3) |>
  mutate(Model = fit_broccoli$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-broccoli shows the NVAT monthly broccoli prices with four months of forecasts using SARIMA.

```{r}
#| label: fig-broccoli
#| fig-cap: "Forecasts for Monthly Broccoli Prices"
#| fig-width: 6.5
#| echo: false

fc_broccoli |>
  autoplot(broccoli) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

cabbage <- nvat_monthly_long_ts |>
  filter(vegetable == "cabbage")
  
fit_cabbage <- cabbage |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_cabbage <- fit_cabbage |>
  forecast(h = 4)
```

@tbl-cabbage shows the forecasts for cabbage prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from a SARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-cabbage
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Cabbage Prices"
#| echo: false

tbl_cabbage <- fc_cabbage |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_cabbage) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for cabbage price is `r tbl_cabbage[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cabbage[1, 3]` to `r tbl_cabbage[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cabbage[1, 5]` to `r tbl_cabbage[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for cabbage price is `r tbl_cabbage[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cabbage[2, 3]` to `r tbl_cabbage[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cabbage[2, 5]` to `r tbl_cabbage[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for cabbage price is `r tbl_cabbage[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cabbage[3, 3]` to `r tbl_cabbage[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cabbage[3, 5]` to `r tbl_cabbage[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for cabbage price is `r tbl_cabbage[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cabbage[4, 3]` to `r tbl_cabbage[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cabbage[4, 5]` to `r tbl_cabbage[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

From January to April of 2024, a SARIMA model predicts that the price of cabbage will generally be rising. The average price is expected to increase from 9.78 in January to 24.98 in April, according to the point forecasts. Nonetheless, there is a lot of ambiguity surrounding these estimates. Especially in the later months, the confidence intervals are wide, suggesting a greater degree of unpredictability. For instance, even though there is an 80% likelihood that the price would drop between 5.28 and 15.34 in January, the range of possible price volatility increases to 9.31 to 46.71 in April.

```{r}
#| include: false

tbl_ljb_cabbage <- augment(fit_cabbage) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 3) |>
  mutate(Model = fit_cabbage$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-cabbage shows the NVAT monthly cabbage prices with four months of forecasts using SARIMA.

```{r}
#| label: fig-cabbage
#| fig-cap: "Forecast for Monthly Cabbage Prices"
#| fig-width: 6.5
#| echo: false

fc_cabbage |>
  autoplot(cabbage) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

carrot <- nvat_monthly_long_ts |>
  filter(vegetable == "carrot")
  
fit_carrot <- carrot |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_carrot <- fit_carrot |>
  forecast(h = 4)
```

@tbl-carrot shows the forecasts for carrot prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from a SARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-carrot
#| tbl-cap-location: top
#| tbl-cap: "Forecast for Monthly Carrot Prices"
#| echo: false

tbl_carrot <- fc_carrot |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_carrot) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for carrot price is `r tbl_carrot[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_carrot[1, 3]` to `r tbl_carrot[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_carrot[1, 5]` to `r tbl_carrot[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for carrot price is `r tbl_carrot[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_carrot[2, 3]` to `r tbl_carrot[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_carrot[2, 5]` to `r tbl_carrot[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for carrot price is `r tbl_carrot[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_carrot[3, 3]` to `r tbl_carrot[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_carrot[3, 5]` to `r tbl_carrot[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for carrot price is `r tbl_carrot[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_carrot[4, 3]` to `r tbl_carrot[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_carrot[4, 5]` to `r tbl_carrot[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

Based on a SARIMA model, carrot prices are expected to remain relatively stable from January to April 2024, with a minor gain in January through March and a slight decrease in April. However, the model suggests that these forecasts are highly uncertain. The huge confidence intervals indicate the prospect of large price movements, especially at the 95% chance level. Although there is an 80% chance that the price in January will fall between 15.43 and 37.07, the range for April expands to 9.68 to 83.27, implying a far wider range of possible values.

```{r}
#| include: false

tbl_ljb_carrot <- augment(fit_carrot) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 3) |>
  mutate(Model = fit_carrot$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-carrot shows the NVAT monthly carrot prices with four months of forecasts using SARIMA.

```{r}
#| label: fig-carrot
#| fig-cap: "Forecast for Monthly Carrot Prices"
#| fig-width: 6.5
#| echo: false

fc_carrot |>
  autoplot(carrot) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

cauliflower <- nvat_monthly_long_ts |>
  filter(vegetable == "cauliflower")
  
fit_cauliflower <- cauliflower |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_cauliflower <- fit_cauliflower |>
  forecast(h = 4)
```

@tbl-cauliflower shows the forecasts for cauliflower prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from a SARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-cauliflower
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Cauliflower Prices"
#| echo: false

tbl_cauliflower <- fc_cauliflower |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_cauliflower) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for cauliflower price is `r tbl_cauliflower[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cauliflower[1, 3]` to `r tbl_cauliflower[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cauliflower[1, 5]` to `r tbl_cauliflower[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for cauliflower price is `r tbl_cauliflower[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cauliflower[2, 3]` to `r tbl_cauliflower[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cauliflower[2, 5]` to `r tbl_cauliflower[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for cauliflower price is `r tbl_cauliflower[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cauliflower[3, 3]` to `r tbl_cauliflower[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cauliflower[3, 5]` to `r tbl_cauliflower[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for cauliflower price is `r tbl_cauliflower[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cauliflower[4, 3]` to `r tbl_cauliflower[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cauliflower[4, 5]` to `r tbl_cauliflower[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_cauliflower <- augment(fit_cauliflower) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 1) |>
  mutate(Model = fit_cauliflower$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-cauliflower shows the NVAT monthly cauliflower prices with four months of forecasts using SARIMA.

```{r}
#| label: fig-cauliflower
#| fig-cap: "Forecast for Monthly Cauliflower Prices"
#| fig-width: 6.5
#| echo: false

fc_cauliflower |>
  autoplot(cauliflower) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

celery <- nvat_monthly_long_ts |>
  filter(vegetable == "celery")
  
fit_celery <- celery |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_celery <- fit_celery |>
  forecast(h = 4)
```

@tbl-celery shows the forecasts for celery prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-celery
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Celery Prices"
#| echo: false

tbl_celery <- fc_celery |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_celery) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for celery price is `r tbl_celery[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_celery[1, 3]` to `r tbl_celery[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_celery[1, 5]` to `r tbl_celery[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for celery price is `r tbl_celery[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_celery[2, 3]` to `r tbl_celery[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_celery[2, 5]` to `r tbl_celery[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for celery price is `r tbl_celery[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_celery[3, 3]` to `r tbl_celery[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_celery[3, 5]` to `r tbl_celery[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for celery price is `r tbl_celery[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_celery[4, 3]` to `r tbl_celery[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_celery[4, 5]` to `r tbl_celery[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_celery <- augment(fit_celery) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 2) |>
  mutate(Model = fit_celery$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-celery shows the NVAT monthly celery prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-celery
#| fig-cap: "Forecast for Monthly Celery Prices"
#| fig-width: 6.5
#| echo: false

fc_celery |>
  autoplot(celery) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

chayote_bunga <- nvat_monthly_long_ts |>
  filter(vegetable == "chayote_bunga")
  
fit_chayote_bunga <- chayote_bunga |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_chayote_bunga <- fit_chayote_bunga |>
  forecast(h = 4)
```

@tbl-chayote_bunga shows the forecasts for chayote (bunga) prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-chayote_bunga
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Chayote (Bunga) Prices"
#| echo: false

tbl_chayote_bunga <- fc_chayote_bunga |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_chayote_bunga) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for chayote (bunga) price is `r tbl_chayote_bunga[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_chayote_bunga[1, 3]` to `r tbl_chayote_bunga[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_chayote_bunga[1, 5]` to `r tbl_chayote_bunga[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for chayote (bunga) price is `r tbl_chayote_bunga[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_chayote_bunga[2, 3]` to `r tbl_chayote_bunga[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_chayote_bunga[2, 5]` to `r tbl_chayote_bunga[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for chayote (bunga) price is `r tbl_chayote_bunga[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_chayote_bunga[3, 3]` to `r tbl_chayote_bunga[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_chayote_bunga[3, 5]` to `r tbl_chayote_bunga[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for chayote (bunga) price is `r tbl_chayote_bunga[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_chayote_bunga[4, 3]` to `r tbl_chayote_bunga[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_chayote_bunga[4, 5]` to `r tbl_chayote_bunga[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_chayote_bunga <- augment(fit_chayote_bunga) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 1) |>
  mutate(Model = fit_chayote_bunga$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-chayote_bunga shows the NVAT monthly chayote (bunga) prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-chayote_bunga
#| fig-cap: "Forecast for Monthly Chayote (Bunga) Prices"
#| fig-width: 6.5
#| echo: false

fc_chayote_bunga |>
  autoplot(chayote_bunga) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

cucumber <- nvat_monthly_long_ts |>
  filter(vegetable == "cucumber")
  
fit_cucumber <- cucumber |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_cucumber <- fit_cucumber |>
  forecast(h = 4)
```

@tbl-cucumber shows the forecasts for cucumber prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-cucumber
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Cucumber Prices"
#| echo: false

tbl_cucumber <- fc_cucumber |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_cucumber) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for cucumber price is `r tbl_cucumber[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cucumber[1, 3]` to `r tbl_cucumber[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cucumber[1, 5]` to `r tbl_cucumber[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for cucumber price is `r tbl_cucumber[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cucumber[2, 3]` to `r tbl_cucumber[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cucumber[2, 5]` to `r tbl_cucumber[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for cucumber price is `r tbl_cucumber[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cucumber[3, 3]` to `r tbl_cucumber[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cucumber[3, 5]` to `r tbl_cucumber[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for cucumber price is `r tbl_cucumber[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_cucumber[4, 3]` to `r tbl_cucumber[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_cucumber[4, 5]` to `r tbl_cucumber[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_cucumber <- augment(fit_cucumber) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 3) |>
  mutate(Model = fit_cucumber$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-cucumber shows the NVAT monthly cucumber prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-cucumber
#| fig-cap: "Forecasts for Monthly cucumber Prices"
#| fig-width: 6.5
#| echo: false

fc_cucumber |>
  autoplot(cucumber) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

gabi_galyang <- nvat_monthly_long_ts |>
  filter(vegetable == "gabi_galyang")
  
fit_gabi_galyang <- gabi_galyang |>
  model(
    ETS = ETS(log(price))
  )

fc_gabi_galyang <- fit_gabi_galyang |>
  forecast(h = 4)

```

@tbl-gabi_galyang shows the forecasts for gabi (galyang) prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ETS model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-gabi_galyang
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Gabi (Galyang) Prices"
#| echo: false

tbl_gabi_galyang <- fc_gabi_galyang |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_gabi_galyang) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for gabi (galyang) price is `r tbl_gabi_galyang[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_gabi_galyang[1, 3]` to `r tbl_gabi_galyang[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_gabi_galyang[1, 5]` to `r tbl_gabi_galyang[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for gabi (galyang) price is `r tbl_gabi_galyang[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_gabi_galyang[2, 3]` to `r tbl_gabi_galyang[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_gabi_galyang[2, 5]` to `r tbl_gabi_galyang[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for gabi (galyang) price is `r tbl_gabi_galyang[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_gabi_galyang[3, 3]` to `r tbl_gabi_galyang[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_gabi_galyang[3, 5]` to `r tbl_gabi_galyang[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for gabi (galyang) price is `r tbl_gabi_galyang[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_gabi_galyang[4, 3]` to `r tbl_gabi_galyang[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_gabi_galyang[4, 5]` to `r tbl_gabi_galyang[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_gabi_galyang <- augment(fit_gabi_galyang) |>
  filter(.model == "ETS") |>
  features(.innov, ljung_box, lag = 12, dof = 1) |>
  mutate(Model = fit_gabi_galyang$ETS) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-gabi_galyang shows the NVAT monthly gabi (galyang) prices with four months of forecasts using ETS.

```{r}
#| label: fig-gabi_galyang
#| fig-cap: "Forecasts for Monthly Gabi (Galyang) Prices"
#| fig-width: 6.5
#| echo: false

fc_gabi_galyang |>
  autoplot(gabi_galyang) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

pepper_sultan <- nvat_monthly_long_ts |>
  filter(vegetable == "pepper_sultan")
  
fit_pepper_sultan <- pepper_sultan |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_pepper_sultan <- fit_pepper_sultan |>
  forecast(h = 4)
```

@tbl-pepper_sultan shows the forecasts for pepper (sultan) prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-pepper_sultan
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Pepper (Sultan) Prices"
#| echo: false

tbl_pepper_sultan <- fc_pepper_sultan |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_pepper_sultan) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for pepper (sultan) price is `r tbl_pepper_sultan[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_sultan[1, 3]` to `r tbl_pepper_sultan[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_sultan[1, 5]` to `r tbl_pepper_sultan[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for pepper (sultan) price is `r tbl_pepper_sultan[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_sultan[2, 3]` to `r tbl_pepper_sultan[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_sultan[2, 5]` to `r tbl_pepper_sultan[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for pepper (sultan) price is `r tbl_pepper_sultan[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_sultan[3, 3]` to `r tbl_pepper_sultan[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_sultan[3, 5]` to `r tbl_pepper_sultan[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for pepper (sultan) price is `r tbl_pepper_sultan[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_sultan[4, 3]` to `r tbl_pepper_sultan[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_sultan[4, 5]` to `r tbl_pepper_sultan[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_pepper_sultan <- augment(fit_pepper_sultan) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 4) |>
  mutate(Model = fit_pepper_sultan$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-pepper_sultan shows the NVAT monthly pepper (sultan) prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-pepper_sultan
#| fig-cap: "Forecasts for Monthly Pepper (Sultan) Prices"
#| fig-width: 6.5
#| echo: false

fc_pepper_sultan |>
  autoplot(pepper_sultan) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

pepper_taiwan <- nvat_monthly_long_ts |>
  filter(vegetable == "pepper_taiwan")
  
fit_pepper_taiwan <- pepper_taiwan |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_pepper_taiwan <- fit_pepper_taiwan |>
  forecast(h = 4)
```

@tbl-pepper_taiwan shows the forecasts for pepper (taiwan) prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-pepper_taiwan
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Pepper (Taiwan) Prices"
#| echo: false

tbl_pepper_taiwan <- fc_pepper_taiwan |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_pepper_taiwan) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for pepper (taiwan) price is `r tbl_pepper_taiwan[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_taiwan[1, 3]` to `r tbl_pepper_taiwan[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_taiwan[1, 5]` to `r tbl_pepper_taiwan[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for pepper (taiwan) price is `r tbl_pepper_taiwan[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_taiwan[2, 3]` to `r tbl_pepper_taiwan[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_taiwan[2, 5]` to `r tbl_pepper_taiwan[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for pepper (taiwan) price is `r tbl_pepper_taiwan[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_taiwan[3, 3]` to `r tbl_pepper_taiwan[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_taiwan[3, 5]` to `r tbl_pepper_taiwan[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for pepper (taiwan) price is `r tbl_pepper_taiwan[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_pepper_taiwan[4, 3]` to `r tbl_pepper_taiwan[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_pepper_taiwan[4, 5]` to `r tbl_pepper_taiwan[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_pepper_taiwan <- augment(fit_pepper_taiwan) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 3) |>
  mutate(Model = fit_pepper_taiwan$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-pepper_taiwan shows the NVAT monthly pepper (taiwan) prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-pepper_taiwan
#| fig-cap: "Forecasts for Monthly Pepper (Taiwan) Prices"
#| fig-width: 6.5
#| echo: false

fc_pepper_taiwan |>
  autoplot(pepper_taiwan) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

potato <- nvat_monthly_long_ts |>
  filter(vegetable == "potato")
  
fit_potato <- potato |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_potato <- fit_potato |>
  forecast(h = 4)
```

@tbl-potato shows the forecasts for potato prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-potato
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Potato Prices"
#| echo: false

tbl_potato <- fc_potato |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_potato) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for potato price is `r tbl_potato[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_potato[1, 3]` to `r tbl_potato[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_potato[1, 5]` to `r tbl_potato[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for potato price is `r tbl_potato[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_potato[2, 3]` to `r tbl_potato[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_potato[2, 5]` to `r tbl_potato[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for potato price is `r tbl_potato[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_potato[3, 3]` to `r tbl_potato[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_potato[3, 5]` to `r tbl_potato[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for potato price is `r tbl_potato[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_potato[4, 3]` to `r tbl_potato[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_potato[4, 5]` to `r tbl_potato[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_potato <- augment(fit_potato) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 4) |>
  mutate(Model = fit_potato$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-potato shows the NVAT monthly potato prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-potato
#| fig-cap: "Forecasts for Monthly Potato Prices"
#| fig-width: 6.5
#| echo: false

fc_potato |>
  autoplot(potato) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

```{r}
#| include: false

wombok <- nvat_monthly_long_ts |>
  filter(vegetable == "wombok")
  
fit_wombok <- wombok |>
  model(
    ARIMA = ARIMA(log(price))
  )

fc_wombok <- fit_wombok |>
  forecast(h = 4)
```

@tbl-wombok shows the forecasts for wombok prices for the next four months from January to April 2024. It shows the means or the point forecasts along with their corresponding 80% and 95% confidence intervals. The forecast is from an ARIMA model generated using the automatic algorithm. The model generated is shown in @tbl-ljb.

```{r}
#| label: tbl-wombok
#| tbl-cap-location: top
#| tbl-cap: "Forecasts for Monthly Wombok Prices"
#| echo: false

tbl_wombok <- fc_wombok |>
  hilo() |>
  unpack_hilo(c(`80%`, `95%`)) |>
  as_tibble() |>
  group_by(date) |>
  summarise(across(c(.mean, ends_with("upper"), ends_with("lower")), sum)) |>
  mutate_if(is.numeric, round, 2) |>
  select(
    Date = date,
    Mean = .mean,
    "80% Lower" = "80%_lower",
    "80% Upper" = "80%_upper",
    "95% Lower" = "95%_lower",
    "95% Upper" = "95%_upper" 
  )

flextable(tbl_wombok) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  set_table_properties(layout = "autofit", width = 1) |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all")
```

<br>

For January 2024, the point forecast for wombok price is `r tbl_wombok[1, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_wombok[1, 3]` to `r tbl_wombok[1, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_wombok[1, 5]` to `r tbl_wombok[1, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For February 2024, the point forecast for wombok price is `r tbl_wombok[2, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_wombok[2, 3]` to `r tbl_wombok[2, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_wombok[2, 5]` to `r tbl_wombok[2, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For March 2024, the point forecast for wombok price is `r tbl_wombok[3, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_wombok[3, 3]` to `r tbl_wombok[3, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_wombok[3, 5]` to `r tbl_wombok[3, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

For April 2024, the point forecast for wombok price is `r tbl_wombok[4, 2]`. The 80% confidence interval for this forecast ranges from `r tbl_wombok[4, 3]` to `r tbl_wombok[4, 4]`, indicating that there is an 80% probability that the actual value will fall within this range. Additionally, the 95% confidence interval extends from `r tbl_wombok[4, 5]` to `r tbl_wombok[4, 6]`, suggesting that there is a 95% probability that the actual value will be within this broader range.

```{r}
#| include: false

tbl_ljb_wombok <- augment(fit_wombok) |>
  filter(.model == "ARIMA") |>
  features(.innov, ljung_box, lag = 12, dof = 2) |>
  mutate(Model = fit_wombok$ARIMA) |>
  select(
    Vegetable = vegetable,
    Model,
    "LB Statistics" = lb_stat,
    "P-value" = lb_pvalue
  )
```

@fig-wombok shows the NVAT monthly wombok prices with four months of forecasts using ARIMA.

```{r}
#| label: fig-wombok
#| fig-cap: "Forecasts for Monthly Wombok Prices"
#| fig-width: 6.5
#| echo: false

fc_wombok |>
  autoplot(wombok) +
  theme_minimal() +
  labs(
    y = "Price",
    x = "Date"
  )
```

<br>

@tbl-ljb shows the results of the portmanteau test for the models.

```{r}
#| label: tbl-ljb
#| tbl-cap-location: top
#| tbl-cap: "Result of the Portmanteau Test of Residuals for the Models"
#| echo: false

tbl_ljb <- bind_rows(
  tbl_ljb_broccoli,
  tbl_ljb_cabbage,
  tbl_ljb_carrot,
  tbl_ljb_cauliflower,
  tbl_ljb_celery,
  tbl_ljb_chayote_bunga,
  tbl_ljb_cucumber,
  tbl_ljb_gabi_galyang,
  tbl_ljb_pepper_sultan,
  tbl_ljb_pepper_taiwan,
  tbl_ljb_potato,
  tbl_ljb_wombok
) |>
  mutate(
    Model = as.character(Model),
    Model = str_sub(Model, 2, -2),
    Vegetable = veg_labels
  ) |>
  mutate(across(starts_with("LB"), ~round(., 2))) |>
  mutate(across(starts_with("P"), ~apa(., 3, FALSE))) |>
  rename("Q-statistics" = "LB Statistics")

flextable(tbl_ljb) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 4, align = "right", part = "all") |>
  width(j = 1, width = 1.75) |>
  width(j = 2, width = 2.75) |>
  width(j = 3, width = 1) |>
  width(j = 4, width = .85) |>
  set_table_properties(width = 1, layout = "autofit")
```

<br>

Results showed that all the automatic ARIMA algorithm have large p-values. This indicates that there is no significant autocorrelation in the residuals up to 12 lags. This shows that the residuals of all the ARIMA models are independently distributed. Thus, the ARIMA models are a good fit to the data. They can be used in forecasting monthly vegetable prices at NVAT. However, the ETS model for gabi (galyang) has a p-value less than .05. The ETS model failed the portmanteau test since there is still significant autocorrelation in the residuals up to 12 lags. The model can still be used to forecast monthly gabi (galyang) prices, but the prediction or confidence intervals may not be accurate due to the correlated residuals. It is better to explore other models that can capture all the autocorrelations, so to get an accurate forecast.

# Chapter V

## SUMMARY, CONCLUSION AND RECOMMENDATIONS

### Summary

The monthly vegetable prices at NVAT is comprised of prices for the following vegetables: broccoli, cabbage, carrot, cauliflower, celery, chayote (bunga), cucumber, gabi (galyang), pepper (sultan), pepper (taiwan), potato, and wombok. Among the time series, the vegetable with the most variability in price is pepper (taiwan). It also has the highest maximum price and the highest average price among all the vegetables. On the other hand, the vegetable that has the least variability is chayote (bunga). It also has the lowest average price. The vegetable that has the lowest minimum price is wombok. Furthermore, the vegetable with the strongest trend is gabi (galyang). Meanwhile, the vegetable that has the weakest trend is wombok. The vegetable with the strongest seasonality is cauliflower. Meanwhile, the vegetable with the weakest seasonality is cabbage. Most often the prices peak in the third quarter, while some peak in the fourth. All of the prices trough in the first quarter.

On the other hand, the time series cross-validation generated 360 models for the monthly vegetable prices at NVAT. Out of these models, half are automatic ARIMA models and half are automatic ETS models; that is 15 ARIMA models and 15 ETS models for each vegetable. 

Evaluating the models, the automatic ARIMA method outperformed the automatic ETS method in all vegetables except for gabi (galyang). 

Finally, the automatic ARIMA method was used to forecast monthly vegetable prices at NVAT except for gabi (galyang) where automatic ETS was used. Forecasts for monthly vegetable prices from January to April, 2024 were made. The ETS model failed the portmanteau test. The forecast for gabi (galyang) is not accurate. All the forecast for the ARIMA models are accurate based on the portmanteau test.

### Conclusion

The time series of monthly vegetable price at NVATdata reveals distinct seasonal pricing trends that are crucial for both farmers and consumers. It can be used to guide farmers to optimize production and profit by timing their crop calendar. It can also be used to guide consumers to time their purchases strategically. Understanding these dynamics enables farmers to align their harvests with market demands and helps consumers make informed purchasing decisions.

R is a very powerful programming language allowing the analysis, modeling, and forecasting of monthly vegetable prices at NVAT through the `fable` package and other packages in R used in this research. Aside from the time series cross-validation approach used in this research, the `fable` package offers other powerful approaches to time series analysis. None the less, the automatic ARIMA and automatic ETS approaches of the `fable` package are convenient ways of quickly generating models and forecasts for monthly vegetable prices at NVAT.

On the other hand, the automatic ARIMA approach is better than automatic ETS approach in forecasting monthly vegetable prices at NVAT.

The forecasts from the ARIMA and ETS models underscore significant implications for both farmers and consumers in the vegetable market. While ARIMA models provide reliable and accurate forecasts for most vegetables, the ETS models for gabi (galyang) highlights the complexities of price prediction. The anticipated upward trend in vegetable prices may enhance farmers' revenues, yet it also poses challenges for consumers, particularly low-income households that depend on affordable access to vegetables. As these price dynamics evolve, it will be crucial for both parties to remain adaptable and informed, considering external factors such as supply fluctuations and market conditions, to name a few, that could further influence pricing and availability.

### Recommendations

To effectively navigate the fluctuating prices of vegetables throughout the year, farmers should closely monitor market trends and adjust their pricing strategies accordingly. For instance, during high-demand periods such as September, when prices peak for crops like broccoli, cauliflower, and gabi (galyang), farmers can capitalize on these spikes by ensuring their products are available at competitive prices. Conversely, during trough periods in March for various vegetables, farmers might consider promotional pricing or bundling strategies to encourage sales despite lower demand. Consumers, on the other hand, should be proactive in purchasing vegetables during these trough periods to benefit from lower prices, particularly for cabbage and wombok. By staying informed about seasonal price trends, both farmers and consumers can make more strategic decisions that enhances their profitability and savings, respectively.

Researchers should consider modeling the monthly vegetable prices at NVAT using other time series models. Other factors such as variables for weather conditions, supply chain dynamics, market trends, etc. should be integrated in the model to better capture the true price dynamics. 

Moreover, the use of R and the `fable` package in forecasting monthly vegetable prices at NVAT is recommended. The use of the automatic ARIMA approach is a convenient way to generate accurate, precise, and reliable models and forecasts. 

Farmers should leverage the forecasts results to adjust production and marketing strategies proactively, while consumers, particularly those from low-income households and also business owners, should be informed about forecasts in prices to better manage their budget and strategy in purchases. Nonetheless, researchers should also validate the forecast results with the actual prices. Moreover, the use of these forecasts in making important decisions in farming, purchasing, and distribution should be studied. The Department of Agriculture should also use these forecasts as a guide in making decisions in managing resources for the farmers.

# References
