---
format:
  docx:
    reference-doc: appendices-template.docx
editor: visual
---

# Appendix D. Seasonal and Trend decomposition using LOESS (STL)

## Broccoli

```{r}
#| include: false

library(fpp3)
library(tidyverse)
library(flextable)
attach("data/fmvpEnvironment.RData")
```

```{r}
#| label: fig-stl_broccoli
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "broccoli") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Cabbage

```{r}
#| label: fig-stl_cabbage
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "cabbage") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Carrot

```{r}
#| label: fig-stl_carrot
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "carrot") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Cauliflower

```{r}
#| label: fig-stl_cauliflower
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "cauliflower") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Celery

```{r}
#| label: fig-stl_celery
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "celery") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Chayote (Bunga)

```{r}
#| label: fig-stl_chayote_bunga
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "chayote_bunga") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Cucumber

```{r}
#| label: fig-stl_cucumber
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "cucumber") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Gabi (Galyang)

```{r}
#| label: fig-stl_gabi_galyang
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "gabi_galyang") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Pepper (Sultan)

```{r}
#| label: fig-stl_pepper_sultan
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "pepper_sultan") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Pepper (Taiwan)

```{r}
#| label: fig-stl_pepper_taiwan
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "pepper_taiwan") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## Potato

```{r}
#| label: fig-stl_potato
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "potato") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

## wombok

```{r}
#| label: fig-stl_wombok
#| fig-width: 6.5
#| fig-height: 6.5
#| echo: false

nvat_monthly_long_ts |>
  filter(vegetable == "wombok") |>
  model(STL(price)) |>
  components() |>
  autoplot() +
    theme(
      strip.text = element_text(size = 10)
    ) +
  theme_minimal()
```

# Appendix E. Time Series Cross-Validation Models

```{r}
#| label: tbl-fit_models
#| tbl-cap-location: top
#| tbl-cap: "Models Generated by Automatic ARIMA and ETS in Time Series Cross-Validation"
#| echo: false

tbl_fit_models <- fit |>
  as_tibble() |>
  arrange(vegetable) |>
  mutate(
    ARIMA = as.character(ARIMA),
    ARIMA = str_sub(ARIMA, 2, -2),
    ETS = as.character(ETS),
    ETS = str_sub(ETS, 2, -2)
  ) |>
  rename(Vegetable = vegetable, " " = .id)

flextable(tbl_fit_models) |>
  bold(part = "header") |>
  line_spacing(space = .5, part = "body") |>
  font(part = "all", fontname = "Times New Roman") |>
  fontsize(size = 12, part = "all") |>
  align(j = 1, align = "left", part = "all") |>
  set_table_properties(width = 1, layout = "autofit")
```

